name: Deploy Lambda Functions Python

on:
  push:
    paths:
      - 'lambda_functions/**/*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check for Lambda function updates
      id: check_lambdas
      run: |
        PY_MODIFIED="no" 

        if git diff --name-only --diff-filter=AM ${{ github.event.before }} ${{ github.sha }} | grep -q '^lambda-functions/[^/]*/.*\.py'; then
          PY_MODIFIED="yes"
        fi
        
        echo "PY_MODIFIED=$PY_MODIFIED" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install zip

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Deploy Python Lambda functions
      if: env.PY_MODIFIED == 'yes'
      run: |
        cd lambda-functions/
        PYTHON_LAMBDA_DIRS=$(git diff --name-only --diff-filter=AM ${{ github.event.before }} ${{ github.sha }} | grep '^lambda-functions/[^/]*/.*\.py' | awk -F/ '{ print $2 }' | sort -u)
        for FUNCTION_NAME in $PYTHON_LAMBDA_DIRS; do
          echo "Deploying Python Lambda: $FUNCTION_NAME..."
          cd $FUNCTION_NAME
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt -t .
          fi
          zip -r ../$FUNCTION_NAME.zip *
          cd ..
          aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file fileb://$FUNCTION_NAME.zip --publish
          CURRENT_HANDLER=$(aws lambda get-function-configuration --function-name $FUNCTION_NAME --query 'Handler' --output text)
          if [ "$CURRENT_HANDLER" != "lambda_function.lambda_handler" ]; then
            aws lambda update-function-configuration --function-name $FUNCTION_NAME --handler lambda_function.lambda_handler
          fi
          rm $FUNCTION_NAME.zip
        done